#Funcao de suportedef imprime(m):    for l in m:        for c in l:            print(c, end=' ')        print()    print()l,c,m,n = [int(i) for i in input().split()]a = []for i in range(l):    #Carrega a matriz linha a linha    a.append([int(i) for i in input().split()])#Prepara uma matriz zeradab = [[0] * c for i in range(l)]for i in range(l):    #Zera a posição atual, não faz 'nada', mas matem a simetria com o trecho 2 do algoritmo    b[i][0] = 0    for j in range(n):        #Soma a largura da janela para os n primeiros valores        b[i][0] += a[i][j]    #Calculatodo o restante da linha em tempo linear,tendo como base as somas anteriores subtraindo-se seu    #antecessor    for j in range(1, c - n + 1):        b[i][j] = b[i][j - 1] + a[i][j + n - 1] - a[i][j - 1]#Trecho 2 do algoritmo, repete tudo na verticalfor j in range(c - n + 1):    a[0][j] = 0    for i in range(m):        a[0][j] += b[i][j]    for i in range(1, l - m + 1):        a[i][j] = a[i - 1][j] + b[i + m - 1][j] - b[i - 1][j]# trecho 3, busca pelo máximo em cada célula da matriz a, desconsiderando a borda direita e# inferior ((l-m+1), (c-n+1))maximo = 0for i in range(l-m+1):    for j in range(c-n+1):        if ( a[i][j] > maximo ):            maximo = a[i][j]#Resultado finalprint(maximo)