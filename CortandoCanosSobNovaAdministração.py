#Função que calcula o valor máximo obtível pela lista de pedidos daquele tamanhodef calcula_maximo(pedidos, tamanho):    #Inicializa o maior valor do tamanho atual (indice - 1), como 0    maiores_valores[tamanho - 1] = 0    #Inicializa váriavel auxiliar para o valor atual como 0    valor_atual = 0    #Para cada pedido    for p in pedidos:        #Se o pedido é igual ao tamanho restante do cano        if p[0] == tamanho:            #O maior valor obtível é igual ao valor do pedido            valor_atual = p[1]        #Se o pedido for menor que o tamanho do cano        if p[0] < tamanho:            #Vemos se já calculou o maior valor do cano de medida restante            if maiores_valores[tamanho - 1 - p[0]] == None:                #E calcula-se o valor máximo obtível do cano restante                calcula_maximo(pedidos, tamanho - p[0])            #Então, pode-se calcular o valor maximo com o pedido p            valor_atual = p[1] + maiores_valores[tamanho - 1 - p[0]]        #Se esse valor for maior que o maximo registrado        if valor_atual > maiores_valores[tamanho - 1]:            #Então temos um novo máximo            maiores_valores[tamanho - 1] = valor_atual    #Retorna-se este valor máximo    return maiores_valores[tamanho - 1]####################### Programa principal#######################Lê número de tamanhos solicitados e tamanho do canon, t = map(int, input().split(" "))#Cria lista com pedidos vazia. Em seguida, le todas os n pedidos de tamanhospedidos = []for i in range(n):    pedidos.append(list(map(int, input().split(" "))))#Tabela de maior valor por tamanho do tubo, inicializada vaziamaiores_valores = [None]*t#Calcula e imprime o valor máximo que se pode obterprint(calcula_maximo(pedidos, t))